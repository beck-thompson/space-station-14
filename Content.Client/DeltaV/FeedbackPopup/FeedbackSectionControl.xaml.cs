using Content.Shared.FeedbackSystem;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.DeltaV.FeedbackPopup;

/// <summary>
/// Displays one feedback section
/// </summary>
[GenerateTypedNameReferences]
public sealed partial class FeedbackSectionControl : Control
{
    [Dependency] private readonly IPrototypeManager _proto = default!;
    private readonly IUriOpener _uri;

    private readonly FeedbackPopupPrototype _feedbackpopup;

    public FeedbackSectionControl(ProtoId<FeedbackPopupPrototype> popupProto)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        _uri = IoCManager.Resolve<IUriOpener>();

        ExpandButton.OnPressed += OnExpandButtonPressed;

        _feedbackpopup = _proto.Index(popupProto);

        // Title
        TitleLabel.Text = _feedbackpopup.Title;

        // Description
        foreach (var section in _feedbackpopup.Description)
        {
            CreateSection(section);
        }

        // Discord link button
        if (_feedbackpopup.ResponseLink != null)
        {
            var button = new Button
            {
                Text = _feedbackpopup.ResponseLink,
            };
            button.OnPressed += OnButtonPressed;
            DescriptionBox.AddChild(button);
        }
    }

    private void CreateSection(string text)
    {
        var label = new RichTextLabel
        {
            Text = text,
            Margin = new Thickness(0,0,0,10),
        };
        DescriptionBox.AddChild(label);
    }

    private void OnButtonPressed(BaseButton.ButtonEventArgs args)
    {
        if (_feedbackpopup.ResponseLink != null)
            _uri.OpenUri(_feedbackpopup.ResponseLink);
    }

    private void OnExpandButtonPressed(BaseButton.ButtonEventArgs args)
    {
        DescriptionBox.Visible = !DescriptionBox.Visible;

        ExpandButton.Text = Loc.GetString(DescriptionBox.Visible ? "feedbackpopup-control-hide-button" : "feedbackpopup-control-show-more-button");
    }
}

